#!/bin/bash

#install linux system dependencies
apt-get update
apt-get install python3
apt-get install python3-pip
apt-get install redis-server
apt-get install can-utils
apt-get install i2c-tools
apt-get install python-smbus
sudo apt-get install python-rpi.gpio
apt install python3-tk
apt install postgresql libpq-dev postgresql-client postgresql-client-common -y
# apt-get install python-usb python3-usb
apt-get install libusb-1.0-0 libusb-1.0-0-dev
apt-get install libudev-dev libfox-1.6-dev autotools-dev autoconf automake libtool

# install python dependencies
pip3 install python-can
pip3 install redis
pip3 install blessed
pip3 install psycopg2-binary
pip3 install pyyaml
pip3 install smbus
pip install pyyaml #not sure why we need this, but we do
pip3 install canopen
# pip3 install pyusb #pretty sure we can remove this

#compiling USB driver C library dependencies
cd drivers/usb_dependencies
cp 61-mcc.rules /etc/udev/rules.d/99-mcc.rules

cd hidapi
chmod +x bootstrap
./bootstrap
./configure
make
make install

cd ../mcc-libusb
make
make install
ldconfig



cd ../../..  #go up 3 levels from SCADA_2021/drivers/usb_dependencies/mcc-libusb/ to SCADA_2021/

#Creating GUI Startup Files 

# copy lxsession file into the .config folder
#cd /usr/etc/scada/GUI 
sudo chmod +x GUI/MainGUI.py 
#sudo chmod +x /usr/etc/scada/GUI

cd /usr/bin
sudo chmod +x scada_gui.py #NOTE TO TEAM: this doesn't work unless you've already run make
cp -r /etc/xdg/lxsession /home/pi/.config
cd /home/pi/.config/lxsession/LXDE-pi
## ADD the following line to the end of the file 
echo '@/usr/bin/scada_gui.py' >> autostart
##Restart pi 

# Creating Bit-Banged I2C BUS to support clock strecthing for BNO-055 IMU 
cd /boot 
echo 'dtoverlay=i2c-gpio,bus=3,i2c_gpio_sda=02,i2c_gpio_scl=03' >> config.txt

# Adding the RTC setup file to rclocal for rtc setup on boot
cd /etc
echo 'sudo python3 /usr/bin/scadartc_setup.py' >> rc.local

# Setup Can 
cd /boot
echo 'dtparam=spi=on' >> config.txt
echo 'dtoverlay=mcp2515-can0,oscillator=16000000,interrupt=25' >> config.txt 
echo 'dtoverlay=spi-bcm2835-overlay' >> config.txt 

echo 'INSTALL COMPLETE'

#bash make

# # make sure virtual can bus is set up for testing
# modprobe vcan
# ip link add dev vcan0 type vcan
# ip link set up vcan0

# # make binary files executable
# chmod +x install
# chmod +x make
# chmod +x scada
# # chmod +x sorter/sorter.py
# chmod +x Driver.py
# # chmod +x calibrator/calibrator.py
# chmod +x calibrator/calibrator_new.py
# # chmod +x logger/logger.py
# chmod +x logger/logger_new.py
# chmod +x GUI/New_GUI_Test.py


# # copy binary files to /usr/bin
# cp scada /usr/bin/scada
# #Copying down i2c sorter 
# cp i2c_sorter.py /usr/bin/i2c_sorter.py
# #copying down can sorter
# cp candriver_tests/can_driver.py /usr/bin/can_driver.py

# # cp sorter/sorter.py /usr/bin/scada_sorter.py
# cp Driver.py /usr/bin/scada_sorter.py
# cp calibrator/calibrator_new.py /usr/bin/scada_calibrator.py
# cp logger/logger_new.py /usr/bin/scada_logger.py
# cp GUI/New_GUI_Test.py /usr/bin/scada_gui.py

# # create a workspace and copy important files into it
# mkdir -p /usr/etc/scada
# rm -rf /usr/etc/scada/utils
# cp -r utils /usr/etc/scada/utils
# rm -rf /usr/etc/scada/config
# cp -r config /usr/etc/scada/config
# cp ./install /usr/etc/scada
# cp ./make.sh /usr/etc/scada
# rm -rf /usr/etc/scada/GUI
# cp -r GUI /usr/etc/scada/GUI

# # copy service files for systemd
# cp sorter/sorter.service /etc/systemd/system
# cp calibrator/calibrator.service /etc/systemd/system
# cp logger/logger.service /etc/systemd/system
# cp GUI/gui.service /etc/systemd/system
